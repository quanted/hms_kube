apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hms-dotnet
  name: hms-dotnet
  namespace: qed-kube-scripts-79-dev
  annotations:
    app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
    app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
    eks.amazonaws.com/compute-type: fargate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hms-dotnet
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hms-dotnet
    spec:
      containers:
      - envFrom:
          - configMapRef:
              name: hms-config
        image: registry.epa.gov/qed/hms_kube/hms_dotnet:dev-gl
        imagePullPolicy: Always
        name: hms-dotnet
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 10
        ports:
          - containerPort: 80
            protocol: TCP
        volumeMounts:
        - mountPath: /app/App_Data
          name: hms-dotnet-appdata
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
      imagePullSecrets:
        - name: glcr-auth
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      volumes:
       - name: hms-dotnet-appdata
         persistentVolumeClaim:
           claimName: hms-dotnetcore-appdata-pvolume-claim1
